The objective of this assignment is to enhance your existing C program from Project 1. In this extended project, you'll integrate a Bash script and utilize an array to improve the functionality and user experience.

Assignment Details:

Part 1: Utilize Project 1 – Linux System C Program

Enhance code where needed to handle System Information, Display, Formatting, and Error Handling.
Part 2: Integration of Bash Script

•    Enhanced Functionality: Integrate a Bash script into your C program. The Bash script should perform a specific system-related task, such as monitoring system resource usage, and the C program should invoke this script when the user selects the corresponding menu option.

•    User Interaction: Extend the menu-driven interface to include an option for running the Bash script. Allow users to choose which task they want to execute, either retrieving basic system information or running the Bash script.

Part 3: Implementing an Array

•    Utilize an Array: Incorporate an array data structure in your C program to store and manage system-related data. For instance, you could use an array to store historical system information retrieved at different time points.

•    Array Manipulation: Implement functionality to add, access, and manage data within the array. For example, you can allow users to add system snapshots to the array and then retrieve and display this historical information.

Part 4: Documentation and User Guide

•    Documentation: Provide well-structured documentation for your program, including clear explanations of how the Bash script is used and how the array is managed within the C program.

•    User Guide: Include a user guide that explains the menu options and how to interact with the program. Describe the functionalities of the Bash script and the array-based features.

•    Turn in required documentation.

Grading Criteria:

Documentation

 Correctness and completeness of the C program.
 Clarity and organization of the system information output.
 Enhanced functionality with the Bash script.
 Effective use of an array for data management.
 Appropriate error handling and user-friendly error messages.
 Quality and clarity of source code comments.
 Quality of the provided user guide.
 Individuality compared to other group members.
 Adherence to non-malicious intent.
